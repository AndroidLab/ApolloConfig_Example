schema {
  query: Query
}

type Query {
  "Возвращает сотрудников.\n\n\n**Returns:**\nСотрудник, если он найден."
  employee("Идентификатор сотрудника." id: String): Employee
}

"Представляет сотрудника."
type Employee @source(name: "Employee", schema: "Employees") {
  "Возвращает id пользователя"
  id: String
  "Возвращает полное имя."
  fullName: String!
  "Возвращает табельный номер."
  personnelNumber: String!
  "Возвращает статус, показывающий присутствие сотрудника на работе."
  workStatus: Employees_WorkingPeriod!
}

"Определяет рабочий период."
type Employees_WorkingPeriod @source(name: "NonWorkingPeriod", schema: "Employees") {
  "Возвращает дату начала."
  beginDate: DateTime!
  "Возвращает дату окончания."
  endDate: DateTime!
}

"Annotates the original name of a type."
directive @source("The original name of the annotated type." name: Name! "The name of the schema to which this type belongs to." schema: Name!) repeatable on ENUM | OBJECT | INTERFACE | UNION | INPUT_OBJECT | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE

"The name scalar represents a valid GraphQL name as specified in the spec and can be used to refer to fields or types."
scalar Name

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime @specifiedBy(url: "https:\/\/www.graphql-scalars.com\/date-time")